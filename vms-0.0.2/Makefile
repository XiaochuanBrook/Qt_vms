#############################################################################
# Makefile for building: vms
# Generated by qmake (2.01a) (Qt 4.4.0-rc1) on: ?? ?? 21 15:30:31 2009
# Project:  vms.pro
# Template: app
# Command: /qte/bin/qmake -unix -o Makefile vms.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gcc
CXX           = arm-linux-g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/qte/mkspecs/default -I. -I/qte/include/QtCore -I/qte/include/QtCore -I/qte/include/QtNetwork -I/qte/include/QtNetwork -I/qte/include/QtGui -I/qte/include/QtGui -I/qte/include -Iopencv/include -I. -I.
LINK          = arm-linux-g++
LFLAGS        = -Wl,-rpath,/qte/lib
LIBS          = $(SUBLIBS)  -L/qte//lib -lQtGui -L/qte//lib -lQtNetwork -lQtCore -lz -lm -lrt -ldl -lpthread
AR            = arm-linux-ar cqs
RANLIB        = arm-linux-ranlib
QMAKE         = /qte/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -R
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		vmsmainwindow.cpp \
		v4l1videocapturedevice.cpp \
		videocapturedevicefactory.cpp \
		videocaptureview.cpp \
		cvvideocapturedevice.cpp \
		camerasettings.cpp moc_vmsmainwindow.cpp \
		moc_videocaptureview.cpp \
		moc_camerasettings.cpp \
		moc_thumbbutton.cpp
OBJECTS       = main.o \
		vmsmainwindow.o \
		v4l1videocapturedevice.o \
		videocapturedevicefactory.o \
		videocaptureview.o \
		cvvideocapturedevice.o \
		camerasettings.o \
		moc_vmsmainwindow.o \
		moc_videocaptureview.o \
		moc_camerasettings.o \
		moc_thumbbutton.o
DIST          = /qte/mkspecs/qconfig.pri \
		/qte/mkspecs/features/qt_functions.prf \
		/qte/mkspecs/features/qt_config.prf \
		/qte/mkspecs/features/exclusive_builds.prf \
		/qte/mkspecs/features/default_pre.prf \
		/qte/mkspecs/features/release.prf \
		/qte/mkspecs/features/default_post.prf \
		/qte/mkspecs/features/warn_on.prf \
		/qte/mkspecs/features/qt.prf \
		/qte/mkspecs/features/unix/thread.prf \
		/qte/mkspecs/features/moc.prf \
		/qte/mkspecs/features/resources.prf \
		/qte/mkspecs/features/uic.prf \
		/qte/mkspecs/features/yacc.prf \
		/qte/mkspecs/features/lex.prf \
		vms.pro
QMAKE_TARGET  = vms
DESTDIR       = 
TARGET        = vms

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_vmsmainwindow.h ui_camerabase.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: vms.pro  /qte/mkspecs/default/qmake.conf /qte/mkspecs/qconfig.pri \
		/qte/mkspecs/features/qt_functions.prf \
		/qte/mkspecs/features/qt_config.prf \
		/qte/mkspecs/features/exclusive_builds.prf \
		/qte/mkspecs/features/default_pre.prf \
		/qte/mkspecs/features/release.prf \
		/qte/mkspecs/features/default_post.prf \
		/qte/mkspecs/features/warn_on.prf \
		/qte/mkspecs/features/qt.prf \
		/qte/mkspecs/features/unix/thread.prf \
		/qte/mkspecs/features/moc.prf \
		/qte/mkspecs/features/resources.prf \
		/qte/mkspecs/features/uic.prf \
		/qte/mkspecs/features/yacc.prf \
		/qte/mkspecs/features/lex.prf \
		/qte/lib/libQtGui.prl \
		/qte/lib/libQtNetwork.prl \
		/qte/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile vms.pro
/qte/mkspecs/qconfig.pri:
/qte/mkspecs/features/qt_functions.prf:
/qte/mkspecs/features/qt_config.prf:
/qte/mkspecs/features/exclusive_builds.prf:
/qte/mkspecs/features/default_pre.prf:
/qte/mkspecs/features/release.prf:
/qte/mkspecs/features/default_post.prf:
/qte/mkspecs/features/warn_on.prf:
/qte/mkspecs/features/qt.prf:
/qte/mkspecs/features/unix/thread.prf:
/qte/mkspecs/features/moc.prf:
/qte/mkspecs/features/resources.prf:
/qte/mkspecs/features/uic.prf:
/qte/mkspecs/features/yacc.prf:
/qte/mkspecs/features/lex.prf:
/qte/lib/libQtGui.prl:
/qte/lib/libQtNetwork.prl:
/qte/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile vms.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/vms1.0.0 || $(MKDIR) .tmp/vms1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/vms1.0.0/ && $(COPY_FILE) --parents vmsmainwindow.h videocapturedevice.h v4l1videocapturedevice.h videocapturedevicefactory.h videocaptureview.h cvvideocapturedevice.h camerasettings.h thumbbutton.h .tmp/vms1.0.0/ && $(COPY_FILE) --parents main.cpp vmsmainwindow.cpp v4l1videocapturedevice.cpp videocapturedevicefactory.cpp videocaptureview.cpp cvvideocapturedevice.cpp camerasettings.cpp .tmp/vms1.0.0/ && $(COPY_FILE) --parents vmsmainwindow.ui camerabase.ui .tmp/vms1.0.0/ && (cd `dirname .tmp/vms1.0.0` && $(TAR) vms1.0.0.tar vms1.0.0 && $(COMPRESS) vms1.0.0.tar) && $(MOVE) `dirname .tmp/vms1.0.0`/vms1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/vms1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_vmsmainwindow.cpp moc_videocaptureview.cpp moc_camerasettings.cpp moc_thumbbutton.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_vmsmainwindow.cpp moc_videocaptureview.cpp moc_camerasettings.cpp moc_thumbbutton.cpp
moc_vmsmainwindow.cpp: ui_vmsmainwindow.h \
		ui_camerabase.h \
		thumbbutton.h \
		videocaptureview.h \
		vmsmainwindow.h
	/qte//bin/moc $(DEFINES) $(INCPATH) vmsmainwindow.h -o moc_vmsmainwindow.cpp

moc_videocaptureview.cpp: videocaptureview.h
	/qte//bin/moc $(DEFINES) $(INCPATH) videocaptureview.h -o moc_videocaptureview.cpp

moc_camerasettings.cpp: camerasettings.h
	/qte//bin/moc $(DEFINES) $(INCPATH) camerasettings.h -o moc_camerasettings.cpp

moc_thumbbutton.cpp: thumbbutton.h
	/qte//bin/moc $(DEFINES) $(INCPATH) thumbbutton.h -o moc_thumbbutton.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_vmsmainwindow.h ui_camerabase.h
compiler_uic_clean:
	-$(DEL_FILE) ui_vmsmainwindow.h ui_camerabase.h
ui_vmsmainwindow.h: vmsmainwindow.ui
	/qte/bin/uic vmsmainwindow.ui -o ui_vmsmainwindow.h

ui_camerabase.h: camerabase.ui \
		videocaptureview.h \
		thumbbutton.h
	/qte/bin/uic camerabase.ui -o ui_camerabase.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp vmsmainwindow.h \
		ui_vmsmainwindow.h \
		ui_camerabase.h \
		thumbbutton.h \
		videocaptureview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

vmsmainwindow.o: vmsmainwindow.cpp vmsmainwindow.h \
		ui_vmsmainwindow.h \
		ui_camerabase.h \
		thumbbutton.h \
		videocaptureview.h \
		camerasettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vmsmainwindow.o vmsmainwindow.cpp

v4l1videocapturedevice.o: v4l1videocapturedevice.cpp v4l1videocapturedevice.h \
		videocapturedevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o v4l1videocapturedevice.o v4l1videocapturedevice.cpp

videocapturedevicefactory.o: videocapturedevicefactory.cpp videocapturedevicefactory.h \
		videocapturedevice.h \
		v4l1videocapturedevice.h \
		cvvideocapturedevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videocapturedevicefactory.o videocapturedevicefactory.cpp

videocaptureview.o: videocaptureview.cpp videocaptureview.h \
		videocapturedevice.h \
		videocapturedevicefactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videocaptureview.o videocaptureview.cpp

cvvideocapturedevice.o: cvvideocapturedevice.cpp cvvideocapturedevice.h \
		videocapturedevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cvvideocapturedevice.o cvvideocapturedevice.cpp

camerasettings.o: camerasettings.cpp camerasettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o camerasettings.o camerasettings.cpp

moc_vmsmainwindow.o: moc_vmsmainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_vmsmainwindow.o moc_vmsmainwindow.cpp

moc_videocaptureview.o: moc_videocaptureview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_videocaptureview.o moc_videocaptureview.cpp

moc_camerasettings.o: moc_camerasettings.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_camerasettings.o moc_camerasettings.cpp

moc_thumbbutton.o: moc_thumbbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_thumbbutton.o moc_thumbbutton.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/linwork/vms-0.0.2/bin/ || $(MKDIR) $(INSTALL_ROOT)/linwork/vms-0.0.2/bin/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/linwork/vms-0.0.2/bin/$(QMAKE_TARGET)"
	-arm-linux-strip "$(INSTALL_ROOT)/linwork/vms-0.0.2/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/linwork/vms-0.0.2/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/linwork/vms-0.0.2/bin/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

